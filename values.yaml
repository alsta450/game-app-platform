# Secrets.yaml
# Secrets.yaml
secrets:
  client:
    secret: {{ .Values.CLIENT_SECRET }}
    id: "game-auth"

# config-map.yaml
data:
  config:
    redirect:
      url: "https://xn--ichsprechedarber-vzb.at/login/oauth2/code/game-auth"
    issuer:
      uri: "https://xn--ichsprechedarber-vzb.at/realms/game-auth"
    database:
      url: "jdbc:postgresql://postgres-svc:5432/postgres"

# ingress.yaml
ingress:
  name: keycloakingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  host: "xn--ichsprechedarber-vzb.at"
  path: "/"
  gamePath: "/randomNumber"
  loginPath: "/login/oauth2/code/game-auth"
  authPath: "/oauth2/authorization/game-auth"
  cssPath: "/css"
  serviceName: game-svc
  keycloakServicePort: 8080
  gameServicePort: 8080
  tls: true
  tlsSecret: ich-spreche-darueber

keycloak:
  image: quay.io/keycloak/keycloak:24.0.3
  containerPort: 8080
  port: 8080
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  env:
    admin: {{ .Values.KEYCLOAK_ADMIN }}
    password: {{ .Values.KEYCLOAK_PASSWORD }}
    proxy: "edge"
    dbUrl: "postgres-svc"
    db: "postgres"
    schema: "keycloak"
    hostname: "xn--ichsprechedarber-vzb.at"

# keycloak-service.yaml
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080

# postgres-spring-secrets.yaml
postgres:
  dbUser: {{ .Values.POSTGRES_DB_USER }}
  dbPassword: {{ .Values.POSTGRES_DB_PASSWORD }}
  containerPort: 5432
  service:
    type: ClusterIP

# game
game:
  image: alsta450/game-app:1.1.7
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080

# Cluster Issuer
clusterIssuer:
  name: letsencrypt-prod
  email: {{ .Values.CLUSTER_ISSUER_EMAIL }}
  server: "https://acme-v02.api.letsencrypt.org/directory"